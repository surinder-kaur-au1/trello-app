{"version":3,"sources":["actions/listActions.js","actions/cardsAction.js","actions/index.js","reducers/listReducers.js","reducers/index.js","store/index.js","components/TrelloActionButton.js","components/TrelloCards.js","components/trelloList.js","components/App.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","addCard","listID","text","ADD_CARD","cardID","initialState","id","cards","listReducers","state","action","newList","newCard","newState","map","list","combineReducers","lists","store","createStore","rootReducer","styles","openFormButtonGroup","display","alignItem","curser","borderRadius","height","width","paddingLeft","formButtonGroup","marginTop","TrelloActionButton","formOpen","openForm","setState","closeForm","e","handleInputChange","target","value","handleAddList","dispatch","props","handleCard","renderForm","placeholder","buttonText","Card","style","minHeight","minWidth","padding","onBlur","onChange","resize","outline","border","overflow","Button","onMouseDown","variant","color","backgroundColor","Icon","marginLeft","cursor","renderAddButton","onClick","this","Component","connect","cardContainer","marginBottom","TrelloCard","index","CardContent","Typography","gutterBottom","container","marginRight","TrelloList","card","App","listContainer","flexDirection","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83e88f20.chunk.js","sourcesContent":["import { CONSTANTS } from '../actions';\r\n export const addList = title => {\r\n    return {\r\n        type: CONSTANTS.ADD_LIST,\r\n        payload: title\r\n    };\r\n}\r\n\r\n","import { CONSTANTS } from '../actions';\r\n export const addCard =(listID, text)  => {\r\n    return {\r\n        type: CONSTANTS.ADD_CARD,\r\n        payload: { text, listID }\r\n    };\r\n}\r\n\r\n","export * from './listActions';\r\nexport * from './cardsAction';\r\nexport const CONSTANTS = {\r\n    ADD_CARD : \"ADD_CARD\",\r\n    ADD_LIST : \"ADD_LIST\"\r\n}","import { CONSTANTS } from '../actions';\r\nlet listID = 2;\r\nlet cardID = 4;\r\nconst initialState = [\r\n    {\r\n        title: \"Completed Task\",\r\n        id: 0,\r\n        cards: [\r\n            {\r\n                id: 0,\r\n                text: \"Trying to create a trello\"\r\n            },\r\n            {\r\n                id: 1,\r\n                text: \"first create frontend\"\r\n            },\r\n            {\r\n                id: 2,\r\n                text: \"introduce reducers\"\r\n            }\r\n        ] \r\n    },\r\n\r\n    {\r\n        title: \"Task TODO\",\r\n        id: 1,\r\n        cards: [\r\n            {\r\n                id: 0,\r\n                text: \"need to work on design part\"\r\n            },\r\n            {\r\n                id: 1,\r\n                text: \"need to add drag drop feature\"\r\n            },\r\n            {\r\n                id: 2,\r\n                text: \"button should be working in order to add and delete stuff.\"\r\n            }\r\n        ] \r\n    }\r\n]\r\n\r\n\r\nconst listReducers = (state = initialState, action) => {\r\n        switch(action.type) {\r\n            case CONSTANTS.ADD_LIST:\r\n                const newList = {\r\n                    title: action.payload,\r\n                    cards : [],\r\n                    id: listID\r\n                };\r\n                listID += 1;\r\n                    return [...state, newList];\r\n\r\n\r\n            case CONSTANTS.ADD_CARD:\r\n                    const newCard = {\r\n                        text: action.payload.text,\r\n                        id: cardID\r\n                    };\r\n                    cardID += 1;\r\n\r\n                 const newState =   state.map(list => {\r\n                        if(list.id === action.payload.listID) {\r\n                            return {\r\n                                ...list,\r\n                                cards: [...list.cards, newCard]\r\n                            }\r\n                        } else {\r\n                            return list\r\n                        }\r\n                    });\r\n                    return newState;\r\n            default:\r\n                 return state;\r\n        }\r\n}\r\n\r\nexport default listReducers;","import { combineReducers } from 'redux';\r\nimport listReducers from './listReducers';\r\n\r\nexport default combineReducers({\r\n    lists: listReducers\r\n});","import { createStore }  from 'redux';\r\n import rootReducer from '../reducers' \r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import { CardTravelSharp } from '@material-ui/icons';\r\nimport React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport { addList, addCard }  from '../actions';\r\n\r\nconst styles = {\r\n    openFormButtonGroup:{\r\n        display: 'flex',\r\n        alignItem: 'center',\r\n        curser: 'pointer',\r\n        borderRadius: 2,\r\n        height: 36,\r\n        width: 272,\r\n        paddingLeft:10\r\n    },\r\n    formButtonGroup: {\r\n        marginTop: 8,\r\n        display:'flex',\r\n        alignItem: 'center'\r\n    }\r\n}\r\nclass TrelloActionButton extends Component {\r\n        state ={\r\n            formOpen : false,\r\n            text: \"\"\r\n        };\r\n    openForm =()=>{\r\n            this.setState({\r\n                formOpen: true\r\n            })\r\n        }\r\n    closeForm = e=>{\r\n                this.setState({\r\n                    formOpen: false\r\n                })\r\n            }\r\n\r\n       handleInputChange = e =>{\r\n           this.setState({\r\n               text: e.target.value\r\n           })\r\n       } \r\n       \r\n       handleAddList = () =>{\r\n           const { dispatch } = this.props;\r\n           const { text } = this.state;\r\n\r\n           if(text) {\r\n               this.setState({\r\n                   text: \"\"\r\n               })\r\n               dispatch(addList(text))\r\n           }\r\n           return;\r\n       };\r\n\r\n       handleCard = () => {\r\n        const { dispatch, listID } = this.props;\r\n        const { text } = this.state;\r\n\r\n        if(text) {\r\n            this.setState({\r\n                text: \"\"\r\n            })\r\n            dispatch(addCard(listID, text));\r\n       }\r\n       };\r\n\r\n\r\n    renderForm =() => {\r\n        const {list } = this.props\r\n        const placeholder = list ? \"Enter the list\" : \"Enter the title for card\"\r\n        const buttonText = list ? \"Add list\": \"Add Card\"\r\n        return(\r\n            <div>\r\n                <Card style={{\r\n                    minHeight: 85,\r\n                    minWidth: 185,\r\n                    padding: '8px 6px 2px'\r\n\r\n                }}>\r\n                   <TextareaAutosize  placeholder={placeholder} onBlur={this.closeForm} \r\n                    value= { this.state.text} onChange={this.handleInputChange}\r\n                    style={{\r\n                        resize: 'none',\r\n                        width: '100%',\r\n                        outline: 'none',\r\n                        border:'none',\r\n                        overflow: 'hidden',\r\n                        padding: '8px 6px 2px'\r\n                    }}\r\n                    />\r\n\r\n                    \r\n                </Card>\r\n                <div style={styles.formButtonGroup}>\r\n                    <Button onMouseDown={ list ? this.handleAddList : this.handleCard} \r\n                    variant=\"contained\" style={{color: 'white', backgroundColor:\"#5aac44\"}}>\r\n                    {buttonText}{\"\"}\r\n                    </Button>\r\n                    <Icon style={{marginLeft:8, cursor:'pointer'}}>close</Icon></div>\r\n            </div>\r\n        )\r\n    }\r\n    renderAddButton= ()=> {\r\n      const  { list } = this.props\r\n\r\n      const buttonText = list ? \"Add another list\": \"Add another card\";\r\n      return(\r\n          <div  onClick = {this.openForm} style = {styles.openFormButtonGroup}>\r\n              <Icon>add</Icon>\r\n               <p>{buttonText}</p>\r\n          </div>\r\n      );\r\n    } \r\n\r\n    \r\n    render() {\r\n        return this.state.formOpen ? this.renderForm(): this.renderAddButton();\r\n    }\r\n}\r\n\r\nexport default connect()(TrelloActionButton); ","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport  CardContent  from '@material-ui/core/CardContent';\r\n\r\nconst styles={\r\n   cardContainer: {\r\n           marginBottom: 0\r\n   }\r\n}\r\nconst TrelloCard = ({ text, id, index }) => {\r\n    return(\r\n     \r\n             <Card style = {styles.cardContainer}>\r\n             <CardContent>\r\n               <Typography gutterBottom>\r\n                 {text}\r\n               </Typography>\r\n               </CardContent></Card>\r\n        \r\n   \r\n      \r\n      );\r\n}\r\n\r\nexport default TrelloCard;","import { CardTravelSharp } from '@material-ui/icons';\r\nimport React, { Component } from 'react';\r\nimport TrelloActionButton from './TrelloActionButton';\r\n import TrelloCard from './TrelloCards';\r\n \r\nimport { Card } from '@material-ui/core';\r\nconst styles = {\r\n    container: {\r\n        backgroundColor: '#dfe3ef',\r\n        borderRadius: 2,\r\n        height: '100%',\r\n        width: 200,\r\n        padding: 8,\r\n        marginRight: 8,\r\n        height: '100%'\r\n        \r\n    }\r\n}\r\nconst TrelloList = ({ title, cards, listID }) =>{\r\n    return (\r\n        \r\n            \r\n        <div \r\n         style = {styles.container}>\r\n            <h4>{title}</h4>\r\n            {cards.map((card, index) => {\r\n                return (\r\n                    <TrelloCard\r\n                        key={card.id}\r\n                        index={index}\r\n                        text={card.text}\r\n                        id={card.id} />\r\n                );\r\n            })}\r\n            < TrelloActionButton listID = {listID} />\r\n        \r\n        </div>\r\n            \r\n    \r\n    );\r\n}\r\n\r\nexport default TrelloList;","import React, { Component } from 'react';\r\nimport TrelloList from './trelloList';\r\nimport { connect } from 'react-redux';\r\nimport TrelloActionButton from './TrelloActionButton';\r\n\r\nclass App extends Component {\r\n\r\n    \r\n    render() {\r\n\r\n        const { lists } = this.props;\r\n        return(\r\n        \r\n            <div>\r\n                    <h2><i>Trello.com</i></h2>\r\n                    <div style={styles.listContainer}>\r\n                {lists.map(list=>(<TrelloList\r\n                listID = {list.id}\r\n                 key={list.id}\r\n                 title={list.title}\r\n                 cards={list.cards}/>))}\r\n                <TrelloActionButton list/>\r\n            </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst styles= {\r\n    listContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        marginRight: 8\r\n    }\r\n};\r\nconst mapStateToProps= (state) => {\r\n    return ({\r\n        lists: state.lists\r\n    });\r\n}\r\n\r\n    export default connect (mapStateToProps) (App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider }  from 'react-redux';\nimport store from './store/index.js';\nimport App from './components/App.js';\n\n\nReactDOM.render(\n  <Provider store = {store}> <App /> </Provider>,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}
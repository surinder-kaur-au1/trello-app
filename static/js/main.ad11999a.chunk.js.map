{"version":3,"sources":["actions/index.js","reducers/listReducers.js","reducers/index.js","store/index.js","components/TrelloActionButton.js","components/TrelloCards.js","components/trelloList.js","components/App.js","index.js"],"names":["CONSTANTS","listID","initialState","title","id","cards","text","listReducers","state","action","type","newList","payload","card","combineReducers","lists","store","createStore","rootReducer","TrelloActionButton","formOpen","renderAddButton","List","props","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","onclick","openForm","style","styles","openForButtonGroup","opacity","color","backgroundColor","Icon","setState","closeForm","e","renderForm","list","placeholder","buttonTitle","Card","autoFocus","onBlur","ovalue","onChange","handleInput","resize","width","overflow","outline","border","formButtonGroup","Button","variant","this","React","Component","display","alignItems","cursor","borderRadius","height","paddingLeft","marginTop","cardContainer","marginBottom","TrelloCard","CardContent","Typography","gutterBottom","container","padding","marginRight","TrelloList","map","App","listContainer","flexDirection","connect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad11999a.chunk.js","sourcesContent":["export const CONSTANTS = {\r\n    ADD_CARD : \"ADD_CARD\",\r\n    ADD_LIST : \"ADD_LIST\"\r\n}","import { CONSTANTS } from '../actions';\r\nlet listID = 2;\r\nconst initialState = [\r\n    {\r\n        title: \"Completed Task\",\r\n        id: 0,\r\n        cards: [\r\n            {\r\n                id: 0,\r\n                text: \"Trying to create a trello\"\r\n            },\r\n            {\r\n                id: 1,\r\n                text: \"first create frontend\"\r\n            },\r\n            {\r\n                id: 2,\r\n                text: \"introduce reducers\"\r\n            }\r\n        ] \r\n    },\r\n\r\n    {\r\n        title: \"Task TODO\",\r\n        id: 0,\r\n        cards: [\r\n            {\r\n                id: 0,\r\n                text: \"need to work on design part\"\r\n            },\r\n            {\r\n                id: 1,\r\n                text: \"need to add drag drop feature\"\r\n            },\r\n            {\r\n                id: 2,\r\n                text: \"button should be working in order to add and delete stuff.\"\r\n            }\r\n        ] \r\n    }\r\n]\r\n\r\n\r\nconst listReducers = (state = initialState, action) => {\r\n        switch(action.type) {\r\n            case CONSTANTS.ADD_LIST:\r\n                const newList = {\r\n                    title: action.payload.title,\r\n                    card : [],\r\n                    id: listID\r\n                };\r\n                listID += 1;\r\n                    return [...state, newList];\r\n                \r\n            default: return state;\r\n        }\r\n}\r\n\r\nexport default listReducers;","import { combineReducers } from 'redux';\r\nimport listReducers from './listReducers';\r\n\r\nexport default combineReducers({\r\n    lists: listReducers\r\n});","import { createStore }  from 'redux';\r\n import rootReducer from '../reducers' \r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport Card from '@material-ui/core/Card';\r\nimport { NoEncryption } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nclass TrelloActionButton extends React.Component {\r\n\r\n        state = {\r\n            formOpen : false\r\n        }\r\n    renderAddButton = () =>{\r\n        const {List} = this.props;\r\n        const buttonText = List ? \"Add another list\": \"Add another card\";\r\n        const buttonTextOpacity = List? 1 : 0.5;\r\n        const buttonTextColor = List? \"white\": \"inherit\";\r\n        const buttonTextBackground= List? \"rgba(0, 0, 0, 1.5)\": \"inherit\";\r\n    return (\r\n        \r\n        <div onclick = {this.openForm} style= {{...styles.openForButtonGroup,\r\n             opacity: buttonTextOpacity,\r\n            color: buttonTextColor,\r\n            backgroundColor: buttonTextBackground,\r\n        }}>\r\n            <Icon>add</Icon>\r\n            <p>{buttonText}</p>\r\n        </div>\r\n    \r\n    )\r\n    }\r\n\r\n    \r\n\r\n    openForm = () =>{\r\n        this.setState({\r\n            formOpen: true\r\n        })\r\n    }\r\n\r\n    closeForm= (e)=>{\r\n        this.setState({\r\n            formOpen: false\r\n        })\r\n}\r\n\r\n    renderForm=()=> {\r\n        const {list} = this.props;\r\n        const placeholder = list? \"Enter list title...\": \"Enter titile for the card\";\r\n        \r\n        const buttonTitle = list? \"Add List\": \"Add Card\";\r\n        return <div>\r\n                <Card>\r\n                    <TextareaAutosize placeholder={placeholder} autoFocus onBlur={this.closeForm} \r\n                    ovalue= {this.state.text} onChange={ this.handleInput}\r\n                    style = {{\r\n                        resize: \"none\",\r\n                        width: \"100%\",\r\n                        overflow: \"hidden\",\r\n                        outline: \"none\",\r\n                        border: \"none\"\r\n                    }}/>\r\n                </Card>\r\n                <div style= {styles.formButtonGroup}>\r\n                <Button variant=\"contained\" style={{color: \"white\", backgroundColor: \"#5aac44\"}}>{buttonTitle}{\" \"}</Button>\r\n                </div>\r\n        </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        return this.state.formOpen? this.renderForm: this.renderAddButton();\r\n    }\r\n\r\n}\r\n    const styles= {\r\n        openForButtonGroup : {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            cursor :\"pointer\",\r\n            borderRadius:3,\r\n            height: 36,\r\n            width: 200,\r\n            paddingLeft: 10\r\n        },\r\n        formButtonGroup : {\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            alignItems: \"center\"\r\n        }\r\n    }\r\n\r\nexport default TrelloActionButton;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport  CardContent  from '@material-ui/core/CardContent';\r\n\r\nconst styles={\r\n   cardContainer: {\r\n           marginBottom: 0\r\n   }\r\n}\r\nconst TrelloCard = ({text})=>{\r\n    return(\r\n    <Card style = {styles.cardContainer}>\r\n    <CardContent>\r\n      <Typography gutterBottom>\r\n        {text}\r\n      </Typography>\r\n      </CardContent></Card>);\r\n}\r\n\r\nexport default TrelloCard;","import { CardTravelSharp } from '@material-ui/icons';\r\nimport React, { Component } from 'react';\r\nimport TrelloActionButton from './TrelloActionButton';\r\n import TrelloCard from './TrelloCards';\r\nconst styles = {\r\n    container: {\r\n        backgroundColor: '#dfe3ef',\r\n        borderRadius: 2,\r\n        height: '100%',\r\n        width: 200,\r\n        padding: 8,\r\n        marginRight: 8,\r\n        height: '100%'\r\n        \r\n    }\r\n}\r\nconst TrelloList = ({ title, cards }) =>{\r\n    return (\r\n        <div style = {styles.container}>\r\n            <h4>{title}</h4>\r\n            {cards.map(card => (<TrelloCard key={card.id} text={card.text} />))}\r\n            < TrelloActionButton/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrelloList;","import React, { Component } from 'react';\r\nimport TrelloList from './trelloList';\r\nimport { connect } from 'react-redux';\r\nimport TrelloActionButton from './TrelloActionButton';\r\nclass App extends Component {\r\n    render() {\r\n\r\n        const { lists } = this.props;\r\n        return(\r\n            <div>\r\n                    <h2><i>Trello.com</i></h2>\r\n                    <div style={styles.listContainer}>\r\n                {lists.map(list=>(<TrelloList  key={list.id} title={list.title} cards={list.cards}/>))}\r\n                <TrelloActionButton list/>\r\n            </div></div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst styles= {\r\n    listContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        marginRight: 8\r\n    }\r\n};\r\nconst mapStateToProps= (state) => {\r\n    return ({\r\n        lists: state.lists\r\n    });\r\n}\r\n\r\n    export default connect (mapStateToProps) (App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider }  from 'react-redux';\nimport store from './store/index.js';\nimport App from './components/App.js';\n\n\nReactDOM.render(\n  <Provider store = {store}> <App /> </Provider>,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}